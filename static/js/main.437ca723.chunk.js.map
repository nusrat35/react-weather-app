{"version":3,"sources":["component/WeatherCard.js","component/Temperature.js","App.js","index.js"],"names":["WeatherCard","weatherInfo","temp","humidity","pressure","weathermood","name","country","speed","sunset","sunrise","React","useState","weatherState","setWeatherState","useEffect","sec","date","Date","timeStrSunset","getHours","getMinutes","timeStrSunrise","className","toLocaleString","Temperature","searchValue","setsearchValue","setweatherInfo","getWeatherInfo","a","apiUrl","fetch","res","json","data","main","weather","wind","sys","myNewWeatherInfo","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","style","marginBottom","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.437ca723.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst WeatherCard = ( weatherInfo) => {\r\n    const { temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n        sunrise, } = weatherInfo;\r\n    const [weatherState, setWeatherState] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (weathermood) {\r\n      switch (weathermood) {\r\n        case \"Clouds\":\r\n          setWeatherState(\"wi-day-cloudy\");\r\n          break;\r\n        case \"Haze\":\r\n          setWeatherState(\"wi-fog\");\r\n          break;\r\n        case \"Clear\":\r\n          setWeatherState(\"wi-day-sunny\");\r\n          break;\r\n        case \"Mist\":\r\n          setWeatherState(\"wi-dust\");\r\n          break;\r\n\r\n        default:\r\n          setWeatherState(\"wi-day-sunny\");\r\n          break;\r\n      }\r\n    }\r\n  }, [weathermood]);\r\n    //sunset\r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000);\r\n    let timeStrSunset = `${date.getHours()}:${date.getMinutes()}`;\r\n    //sunrise\r\n    sec = sunrise;\r\n    date = new Date(sec * 1000);\r\n    let timeStrSunrise = `${date.getHours()}:${date.getMinutes()}`;\r\n    return (\r\n        <div>\r\n            <article className=\"widget\">\r\n                <div className=\"weatherIcon\">\r\n                    {/* <i className={`wi ${weatherState}`}></i> */}\r\n                    <i className={`wi ${weatherState}`}></i> \r\n                </div>\r\n\r\n                <div className=\"weatherInfo\">\r\n                    <div className=\"temperature\">\r\n                        <span>{temp}&deg;</span>\r\n                    </div>\r\n\r\n                    <div className=\"description\">\r\n                        <div className=\"weatherCondition\">{weathermood}</div>\r\n                        <div className=\"place\">\r\n                            {name}, {country}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"date\"> {new Date().toLocaleString()} </div>\r\n\r\n                {/* our 4column section  */}\r\n                <div className=\"extra-temp\">\r\n                    <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-sunrise\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {timeStrSunrise} AM (BD Time)<br />\r\n                                Sunrise\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-sunset\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {timeStrSunset} PM (BD Time)<br />\r\n                                Sunset \r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"weather-extra-info\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-humidity\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {humidity} <br />\r\n                                Humidity\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-rain\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {pressure} <br />\r\n                                Pressure\r\n                            </p>\r\n                        </div>\r\n\r\n                        {/* <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-strong-wind\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {speed} <br />\r\n                                Speed\r\n                            </p>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\nexport default WeatherCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"./style.css\";\r\nimport WeatherCard from './WeatherCard';\r\n\r\nconst Temperature = () => {\r\n    const [searchValue, setsearchValue] = useState('Dhaka');\r\n    const [weatherInfo, setweatherInfo] = useState({});\r\n    const getWeatherInfo = async () => {\r\n        try {\r\n            const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=da041c7d882fa970078dd3093172e7d8`\r\n            const res = await fetch(apiUrl);\r\n            const data = await res.json(res);\r\n\r\n            const { temp, humidity, pressure } = data.main;\r\n            const { main: weathermood } = data.weather[0];\r\n            const { name } = data;\r\n            const { speed } = data.wind;\r\n            const { country, sunset, sunrise } = data.sys;\r\n            const myNewWeatherInfo = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weathermood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset,\r\n                sunrise,\r\n            };\r\n            setweatherInfo(myNewWeatherInfo);\r\n            console.log({ myNewWeatherInfo });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n    }, [])\r\n    return (\r\n        <>\r\n            {/* <div className=\"wrap\" style={{paddingBottom:\"20px\"}}> */}\r\n            <h2 className=\"title\">Weather App</h2>\r\n            <div className=\"search\">\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"search...\"\r\n                    autoFocus\r\n                    id=\"search\"\r\n                    className=\"searchTerm\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setsearchValue(e.target.value)}\r\n                />\r\n                <button\r\n                    className=\"searchButton\"\r\n                    type=\"button\"\r\n                    onClick={getWeatherInfo}>\r\n                    Search\r\n                </button>\r\n            </div>\r\n            {/* </div> */}\r\n            <div style={{marginBottom: \"80px\"}}>\r\n                <WeatherCard {...weatherInfo} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Temperature;\r\n","import Temperature from \"./component/Temperature\";\n// import WeatherCard from \"./component/WeatherCard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Temperature />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}